---
  - name: check if user alread exists or not
    shell: "id {{ list_item.UserID }}"
    register: user_output
    ignore_errors: true

  - debug:
          msg: "user output ===================== {{ user_output }} "


#if validations are available populate  pass invalid list
  - set_fact:
      validation_result: true

  - set_fact:
      pass_invalid_list: "{{ pass_invalid_list | default([]) | union([list_item]) }}"
      validation_result: false
      var_output_txt: "{{ var_output_txt+ list_item.values()|join(',') +', '+ 'Password Change failed' + '\n' }}"
    when:
       - list_item.Password|length < 8 or  user_output.stdout == ''



  - name: change password of existing user in password_change.yml file
    user:
      name: "{{ list_item.UserID }}"
      password: "{{ list_item.Password| password_hash('sha512') }}"
      update_password: always
    register: password_change_result
    when:
      - validation_result
      - user_output.stdout != ''

  - debug:
      msg: "================pass change result ==== {{ password_change_result| default([]) }} "

  - name: Clear logs and change password of existing user in password_change.yml file
    shell: "pam_tally2 -u {{ list_item.UserID }} --quiet; pam_tally2 -u {{ list_item.UserID }} -r -f /var/log/faillog --quiet; /sbin/pam_tally2 --file  /var/log/faillog -u {{ list_item.UserID }} -r --quiet; /usr/bin/faillog -r -u {{ list_item.UserID }}; chage -d0 {{ list_item.UserID }}"
    register: shellresult
    when:
      - validation_result
      - user_output.stdout != ''
  - debug:
        msg: "==========shell commands pass change result ==== {{ shellresult| default([]) }} "

  - set_fact:
       passwordchanged_list: "{{ passwordchanged_list | default([]) | union([list_item]) }}"
       var_output_txt: "{{ var_output_txt+ list_item.values()|join(',') +', '+ 'Password Change Successful' + '\n' }}"
    when:
       - validation_result
       - user_output.stdout != ''
