---
- name: user management play1 on localhost
  hosts: localhost
  connection: local

  vars:
    valid_hostnames_p1: ""

  tasks:
  - debug:
         msg: "Playbook files are stored in {{ playbook_dir }}" 
  - name: check if requests.csv file is accessible
    stat: 
       path: "{{ playbook_dir }}/requests.csv"
    register: existscsvfile   
  - debug:
          msg: "=====Csv file {{ existscsvfile }}"  
  - name: Copy csv file to temp folder
    copy:
       src: "{{ playbook_dir }}/requests.csv"
       dest: /tmp/requests.csv
    delegate_to: localhost

  - name: read CSV file
    include_role:
     name: user_management_role
     tasks_from: read_csv.yml
    vars:
      csv_file_name: "/tmp/requests.csv"
      csv_fields: "Requestnumber,UserID,Age_date,Homedirectory,Label,Groups,Password,OS,hostname,Action"

  - debug:
       msg: "data from csv file in role file = {{ csvresults }} "

  - set_fact:
       valid_hostnames_p1: "{{ item.hostname }}"
    loop: "{{ csvresults|selectattr('Action','equalto','Creation')|list}}"
    loop_control:
        index_var: my_idx
    when:
       - my_idx == 0
  - set_fact:
       valid_hostnames_p1: "{{ valid_hostnames_p1 + ':' +  item.hostname }}"
    loop: "{{ csvresults|selectattr('Action','equalto','Creation')|list}}"
    loop_control:
        index_var: my_idx
    when:
       - my_idx > 0
       - valid_hostnames_p1 is not search(item.hostname)



  - debug:
      msg: "valid hostnames = {{ valid_hostnames_p1 }}"

- name: user management play2 on hosts read from CSV file
  hosts: "{{ hostvars['localhost']['valid_hostnames_p1'] }}"
  become: true
  become_method: sudo

  vars:
    positive_list: []
    negative_list: []
    group_not_exist: []
    var_output_txt: ""

  tasks:
   - set_fact:
        csvresults_full: "{{ hostvars['localhost']['csvresults'] }}"

   - set_fact:
        csvresults: "{{ csvresults_full|selectattr('Action','equalto','Creation')|selectattr('hostname','equalto',inventory_hostname)|list }}"

   - debug:
       msg: "csv list in second play after filtering based hostname and Action-------------- {{ csvresults }}"

   - name: Call add_user.yml file with each record from csvresults as parameter if user does not exist
     include_role:
       name: user_management_role
       tasks_from: test_role_task.yml
     vars:
       list_item: "{{ item }}"
     with_items: "{{ csvresults }}"
     when: ansible_os_family in ['RedHat','Suse','Debian']

   - debug:
       msg: "test role ends===="

